<style>
    .errors p {
        color: red;
    }
</style>
<article ng-controller="modelValueDirectiveController as vm" ng-cloak>
    <h1>Model Control Demo</h1>
    <p>
        This shows a directive that has a "ng-model" and provides validation etc for this control. We've also implemented custom validators for the control,
        meaning that we support the min/max-attributes for the demo-model-control. Any changed to the control will trigger a validation that would look att the
        current number and compare against any min/max-settings for the control.
    </p>
    <form name="myForm" novalidate="">
        <hr />
        <p>Current Parent Value: {{vm.parentValue}}</p>
        <div>
            <div>
                <input type="number" ng-model="vm.parentValue" min="1" max="9" name="parentVal" /> Valid: {{myForm.parentVal.$valid}}
            </div>
            <div>
                <input type="number" ng-model="vm.parentValue" name="parentNoVal" /> Valid: {{myForm.parentNoVal.$valid}}
            </div>
        </div>
        <demo-model-control ng-model="vm.parentValue" required="" must-be-even="true" min="10" ng-max="vm.customMax" name="custom"></demo-model-control>
        Valid: {{myForm.custom.$valid}}<br />
        <div class="errors">
            <p ng-if="myForm.custom.$error.mustBeEven">Have to be an even number</p>
            <p ng-if="myForm.custom.$error.max">Too high number, try lower</p>
            <p ng-if="myForm.custom.$error.min">Too low number, try higher</p>
        </div>
        myForm.custom.$error: {{myForm.custom.$error | json}}}
        <div>
            Bound max for demo-model-control: <input type="number" ng-model="vm.customMax" />
        </div>
    </form>
</article>
